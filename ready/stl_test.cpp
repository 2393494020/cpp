#include <iostream>
#include <string>
#include <map>
#include <vector>
#include <cstring>

using namespace std;

int main()
{
	string lines[] = {
		"811	20220328",
		"811	20220329",
		"811	20220330",
		"811	20220331",
		"812	20220328",
		"812	20220329",
		"812	20220330",
		"812	20220331",
		"813	20220328",
		"813	20220329",
		"813	20220330",
		"813	20220331",
		"813	20220401",
		"813	20220402",
		"813	20220403",
		"831	20220328",
		"831	20220329",
		"831	20220330",
		"831	20220331",
		"832	20220328",
		"832	20220329",
		"832	20220330",
		"832	20220331",
		"833	20220328",
		"833	20220329",
		"833	20220330",
		"833	20220331",
		"834	20220328",
		"834	20220329",
		"834	20220330",
		"834	20220331",
		"834	20220401",
		"834	20220402",
		"834	20220403",
		"835	20220328",
		"835	20220329",
		"835	20220330",
		"835	20220331",
		"835	20220401",
		"835	20220402",
		"835	20220403",
		"836	20220328",
		"836	20220329",
		"836	20220330",
		"836	20220331",
		"836	20220401",
		"836	20220402",
		"836	20220403",
		"837	20220328",
		"837	20220329",
		"837	20220330",
		"841	20220328",
		"841	20220329",
		"841	20220330",
		"841	20220331",
		"842	20220328",
		"842	20220329",
		"842	20220330",
		"842	20220331",
		"842	20220401",
		"843	20220328",
		"843	20220329",
		"843	20220330",
		"843	20220331",
		"844	20220328",
		"844	20220329",
		"844	20220330",
		"844	20220331",
		"844	20220401",
		"844	20220403",
		"845	20220328",
		"845	20220329",
		"845	20220330",
		"845	20220331",
		"845	20220401",
		"845	20220402",
		"845	20220403",
		"846	20220328",
		"846	20220329",
		"846	20220330",
		"846	20220331",
		"850	20220328",
		"850	20220329",
		"850	20220330",
		"850	20220331",
		"851	20220328",
		"851	20220329",
		"851	20220330",
		"851	20220331",
		"851	20220401",
		"851	20220402",
		"851	20220403",
		"852	20220328",
		"852	20220329",
		"852	20220330",
		"852	20220331",
		"852	20220401",
		"852	20220402",
		"853	20220328",
		"853	20220329",
		"853	20220330",
		"853	20220331",
		"854	20220328",
		"854	20220329",
		"854	20220330",
		"854	20220331",
		"861	20220328",
		"861	20220329",
		"861	20220330",
		"861	20220331",
		"861	20220401",
		"861	20220402",
		"862	20220328",
		"862	20220329",
		"862	20220330",
		"862	20220331",
		"862	20220401",
		"862	20220402",
		"862	20220403",
		"863	20220328",
		"863	20220329",
		"863	20220330",
		"863	20220331",
		"864	20220328",
		"864	20220329",
		"864	20220330",
		"864	20220331",
		"865	20220328",
		"865	20220329",
		"865	20220330",
		"865	20220331",
		"865	20220401"
	};

	int lines_len = sizeof(lines) / sizeof(lines[0]);
	char line[100];
	const char* delim = "\t";
	char* head_token;
	char* last_token;

	map<string, vector<string>> prov_map;
	for (int i = 0; i < lines_len; i++)
	{
		memset(line, 0, 100);
		strcpy_s(line, lines[i].c_str());
		head_token = strtok_s(line, delim, &last_token);

		auto iter = prov_map.find(head_token);
		if (last_token != NULL)
		{
			if (iter == prov_map.end())
			{
				vector<string> v;
				v.push_back(last_token);
				prov_map.insert(pair<string, vector<string>>(head_token, v));
			}
			else
			{
				iter->second.push_back(last_token);
			}
		}
	}

	for (auto iter = prov_map.begin(); iter != prov_map.end(); iter++)
	{
		cout << iter->first << " " << iter->second.size() << " ";
		for (auto sub_iter = iter->second.begin(); sub_iter != iter->second.end(); sub_iter++)
		{
			if (sub_iter != iter->second.begin())
				cout << ",";
			cout << *sub_iter;
		}
		cout << endl;
	}


	return 0;
}